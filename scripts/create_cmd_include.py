# we will convert the ../documentation/commands.md to a C header file
#
#

of = open("coreloop/lusee_commands.h", "w")
ofp = open ("pycoreloop/lusee_commands.py", 'w')
of.write("""
#ifndef LUSEE_SETTINGS_H
#define LUSEE_SETTINGS_H

         
// Top-level CDI commands         
"""
)

ofp.write("""
          
# This file is generated by scripts/create_cmd_include.py
# It includes all the commands that are available in the RFS_Settings mode
# generated from the documentation/commands.md file.

# Top-level CDI commands
          """)

def process_md(fname):
    for line in open(fname).readlines():
        line = line.split('|')
        if len(line)<4:
            continue
        offset, name, desc = line[1:4]
        name = name.strip()
        desc = desc.strip()
        if desc[-1]=='\n':
            desc = desc[:-1]
        print (offset, name, desc)
        if offset[:3] != " 0x":
            continue
        if not (("RFS_" in name) or ("CTRL_"in name)):
            continue
        of.write (f"// {desc}\n")
        of.write(f"#define {name} {offset}\n\n")
        ofp.write(f"# {desc}\n")
        ofp.write(f"{name} = {offset}\n\n")
        print (f'            case {name}:\n                cdi_not_implemented("{name}");\n                return;')

process_md('documentation/toplevel_commands.md')
of.write ("\n\n// RFS Settings commands\n")
ofp.write ("\n\n# RFS Settings commands\n")
process_md('documentation/lusee_commands.md')

of.write("\n\n#endif")